# Generated by Django 3.1.1 on 2021-09-08 04:06

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taxi', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('school', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('manager_full_name', models.CharField(max_length=30)),
                ('manager_national_code', models.CharField(max_length=12)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='upload/company/')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), size=None)),
                ('capacity', models.IntegerField(default=0)),
                ('service_types', models.JSONField(blank=True, default=dict, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to='upload/company_files/')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('status', models.TextField(max_length=100)),
                ('service_type', models.CharField(max_length=30)),
                ('commission_rate_contract', models.IntegerField()),
                ('source_loc', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('destination_loc', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('source_address', models.TextField(max_length=100)),
                ('destination_address', models.TextField(max_length=100)),
                ('side_way', models.CharField(choices=[('both', 'both'), ('source', 'source'), ('destination', 'destination')], max_length=12)),
                ('special', models.BooleanField(default=False)),
                ('period', models.IntegerField(default=5)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='transportation_company.company')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Installment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=0, max_digits=20)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('pass', 'payed')], default='pending', max_length=8)),
                ('pay_type', models.CharField(choices=[('cashe', 'cashe'), ('installment', 'installment')], default='cashe', max_length=100)),
                ('description', models.TextField(max_length=100)),
                ('cheque_count', models.IntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='transportation_company.contract')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved')], max_length=20)),
                ('service_type', models.CharField(choices=[('single_pass', 'single'), ('multiple_pass', 'multiple'), ('service', 'service')], max_length=20)),
                ('commission_rate_contract', models.IntegerField()),
                ('source_loc', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('destination_loc', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('source_address', models.TextField(max_length=100)),
                ('destination_address', models.TextField(max_length=100)),
                ('side_way', models.CharField(choices=[('both', 'both'), ('source', 'source'), ('destination', 'destination')], max_length=12)),
                ('special', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='transportation_company.company')),
                ('installment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='transportation_company.installment')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_transportation_company.request_set+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='InstallmentCheque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cheque_number', models.CharField(max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('bank_name', models.CharField(max_length=30)),
                ('track_card_payment_number', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=100)),
                ('state', models.CharField(choices=[('reject', 'rejected'), ('pass', 'passed'), ('expired', 'expired')], max_length=8)),
                ('due_date', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=0, max_digits=20)),
                ('installment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installmentcheques', to='transportation_company.installment')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='DriverContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('salari', models.IntegerField()),
                ('salari_type', models.CharField(choices=[('monthly', 'monthly'), ('yearly', 'yearly'), ('daily', 'daily'), ('travel', 'travel')], max_length=30)),
                ('price_increase', models.JSONField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivercontracts', to='transportation_company.company')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivercontracts', to='taxi.driver')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='installment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='transportation_company.installment'),
        ),
        migrations.AddField(
            model_name='contract',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_transportation_company.contract_set+', to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('address', models.TextField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='transportation_company.company')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transportation_company.request')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_requests', to='taxi.driver')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('transportation_company.request',),
        ),
        migrations.CreateModel(
            name='StudentRequest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transportation_company.request')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_requests', to='taxi.driver')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_requests', to='school.parent')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('transportation_company.request',),
        ),
        migrations.CreateModel(
            name='StudentPeriodRequest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transportation_company.request')),
                ('period', models.IntegerField(default=5)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_period_requests', to='transportation_company.contract')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_period_requests', to='school.parent')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('transportation_company.request',),
        ),
        migrations.CreateModel(
            name='StudentContract',
            fields=[
                ('contract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transportation_company.contract')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='school.parent')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='school.student')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('transportation_company.contract',),
        ),
    ]
